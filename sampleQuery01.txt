Hi ChatGPT. You once helped me create a bash script for summarizing .js and .css react files into a single file that can then be copy/pasted back to you for team programming and analysis.

It works great. Thanks for that.

I'd like to make an enhancement now. Can you please help? The requirement/enhancement is this: 

#aaa The user will be able to specify --file_list as an argument when running the script on the command line, followed by the  path/filenames of any number (within reason) of any kind of files. For example, the user could enter on the command line:

./doit --file_list App.js App.css src/foo.html

and file_list within the script would become populated with only the 3 files indicated. All other files would be ignored.

In the script, I would like these 2 lines:

# Find all js and css files in the src directory (including subdirectories)
file_list=$(find ./src -type f \( -name "*.js" -o -name "*.css" \))

to become part of an if/else if/else (or equivalent) statement. Please create another user command line option, called --all, which embodies the current behavior for the population of the file_list element. 

As mentioned above (in #aaa), the --file_list option will become the 2nd part of this if/else if/else statement.

For the third and final element, if the user does not select --all or --file_list as an option, they will be presented on the console with instructions for usage of this program.

Hope that makes sense! If you need any additional clarification from me just ask. Here's the current script:

#!/bin/bash

# Function to add identification comment to files
add_identification_comment() {
  file_path=$1
  file_extension="${file_path##*.}"

  # Check if file extension is either 'js' or 'css'
  if [[ $file_extension == "js" || $file_extension == "css" ]]; then
    # Check if the identification comment exists in the file
    if ! grep -q "ChatGPT Ref:" "$file_path"; then
      # Add identification comment to the file
      echo "Adding identification comment to $file_path"
      echo -e "/* ChatGPT Ref: $file_path */\n$(cat "$file_path")" >"$file_path"
    else
      # Remove existing header comments starting with "ChatGPT Ref:"
      echo "Removing existing header comments from $file_path"
      sed -i '/\/\* ChatGPT Ref: .* \*\//d' "$file_path"

      # Add identification comment to the file
      echo "Adding identification comment to $file_path"
      echo -e "/* ChatGPT Ref: $file_path */\n$(cat "$file_path")" >"$file_path"
    fi
  fi
}

# Find all js and css files in the src directory (including subdirectories)
file_list=$(find ./src -type f \( -name "*.js" -o -name "*.css" \))

# Process each file and add identification comment if necessary
for file_path in $file_list; do
  add_identification_comment "$file_path"
done

# Create the output file
output_file="output.js"
echo -e "$file_list" >"$output_file"

# Concatenate the files into a single output
concatenated_output=$(cat $file_list)

# Create the output text file
output_text_file="output.txt"
echo -e "Directory Tree:\n" >"$output_text_file"
find ./src -type d -print | sed -e 's/[^-][^\/]*\//  |/g' -e 's/|\([^ ]\)/|-\1/' >>"$output_text_file"
echo -e "\nConcatenated Output:\n\n$concatenated_output" >>"$output_text_file"

echo "Identification comments added to files. Output files created: $output_file, $output_text_file"

